{% set name = "py_find_1st" %}
{% set version = "1.1.4" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://files.pythonhosted.org/packages/25/e1/5e274480390df4d2d5b2d46a72ee1abba8de8e883c6f1b32f0c68652880c/{{ name }}-{{ version }}.tar.gz
  fn: {{ name }}-{{ version }}.tar.gz
  sha256: 5e2f406f5f5b54e57f8eb0bd4d364739962cf1c9e3b81110ce654fad37935ef3

build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pysndfile = pysndfile:main
    #
    # Would create an entry point called pysndfile that calls pysndfile.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  number: 3

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - python {{ python }}
    - future
    - numpy >=1.13.0
    - setuptools

  host:
    - python {{ python }}
    - numpy >=1.13.0
    - setuptools
    
  run:
    - python {{ python }}
    - numpy >=1.13.0

test:
  # Python imports
  imports:
    - utils_find_1st.find_1st  

  files:
    - test
    
  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.
    - cd test; python test_find_1st.py

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://forge.ircam.fr/p/pysndfile
  license: GNU Library or Lesser General Public License (LGPL)
  summary: 'pysndfile provides PySndfile, a Cython wrapper class for reading/writing soundfiles using libsndfile'
  license_family: LGPL

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
