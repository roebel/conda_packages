package:
  name: pysndfile
  version: "1.3.6"

source:
   - url: https://files.pythonhosted.org/packages/94/ec/2ec1d8a1478b075c06bfd54e6961c9ef9937956e88ef6ffae894b2dc601e/pysndfile-1.3.6.tar.gz
     fn: pysndfile-1.3.6.tar.gz
     sha256: 0593c0682158129244b682406b92a08cc7e0e936784b8197cae3315b2a79de27
     
   - url: http://www.mega-nerd.com/libsndfile/files/libsndfile-1.0.28.tar.gz
     fn: libsndfile-1.0.28.tar.gz
     sha256: 1ff33929f042fa333aed1e8923aa628c3ee9e1eb85512686c55092d1e5a9dfa9
     folder: libsndfile-src
     patches:
        - common.c.patch
        - sfconfig.h.patch
   # - fix.patch

build:
   # noarch_python: True
   # preserve_egg_dir: True
   # entry_points:
     # Put any entry points (scripts to be generated automatically) here. The
     # syntax is module:function.  For example
     # 
     # - pysndfile = pysndfile:main
     #
     # Would create an entry point called pysndfile that calls pysndfile.main()
   
   # If this is a new build for the same version, increment the build
   # number. If you do not include this key, it defaults to 0.
   number: 0

requirements:
  build:
    - python x.x
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - setuptools
    - cython
    - numpy >=1.13.0
  host:
    - python x.x
    - setuptools
    - cython
    - numpy >=1.13.0

  run:
    - python x.x
    - numpy >=1.13.0


test:
  # Python imports
  imports:
    - pysndfile

  files:
    - tests
    
  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.
    - cd tests; python pysndfile_test.py

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    # Put any additional test requirements here.  For example
    - python

about:
  home: http://forge.ircam.fr/p/pysndfile
  license: GNU Library or Lesser General Public License (LGPL)
  summary: 'pysndfile provides PySndfile, a Cython wrapper class for reading/writing soundfiles using libsndfile'
  license_family: LGPL

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
